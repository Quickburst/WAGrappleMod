plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
    maven {
        name = "Onyx Studios"
        url = "https://maven.onyxstudios.dev"
    }
    maven {
        url 'https://jitpack.io/'
    }
	maven {
		url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
	}
}
dependencies {
	implementation 'org.pocketserver:nbt:1.0'
	implementation 'io.github.shiruka:nbt:1.1.4'
	implementation 'io.github.lordakkarin:nbt:1.1.0'
	implementation 'dev.dewy:nbt:1.5.1'
	minecraft "com.mojang:minecraft:1.17.1"
	mappings "net.fabricmc:yarn:1.17.1+build.65:v2"
	modImplementation "net.fabricmc:fabric-loader:0.12.12"
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.45.2+1.17"
	
	modImplementation "com.github.OnyxStudios.Cardinal-Components-API:Cardinal-Components-API:2.3.4"
	include "com.github.OnyxStudios.Cardinal-Components-API:Cardinal-Components-API:2.3.4"
	
	modImplementation group: 'net.devtech', name: 'arrp', version: '0.1.1'
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
